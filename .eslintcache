[{"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\charactersCard.js":"1","D:\\React_projects\\RickAndMortyApp\\r\\src\\App.js":"2","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\characters.js":"3","D:\\React_projects\\RickAndMortyApp\\r\\src\\reportWebVitals.js":"4","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\popOver.js":"5","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\pagination.js":"6","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\episodes\\episodes.js":"7","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\myWatchList\\Mylist.js":"8","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\locations\\locations.js":"9","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\navigation\\Nav.js":"10","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\Home\\home.js":"11","D:\\React_projects\\RickAndMortyApp\\r\\src\\index.js":"12"},{"size":1743,"mtime":1606659226443,"results":"13","hashOfConfig":"14"},{"size":1143,"mtime":1606733521275,"results":"15","hashOfConfig":"14"},{"size":1431,"mtime":1606733644441,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1606470303085,"results":"17","hashOfConfig":"14"},{"size":0,"mtime":1606578876339,"results":"18","hashOfConfig":"14"},{"size":1363,"mtime":1606733663445,"results":"19","hashOfConfig":"14"},{"size":87,"mtime":1606580839421,"results":"20","hashOfConfig":"14"},{"size":63,"mtime":1606584137753,"results":"21","hashOfConfig":"14"},{"size":65,"mtime":1606584133121,"results":"22","hashOfConfig":"14"},{"size":1534,"mtime":1606590737295,"results":"23","hashOfConfig":"14"},{"size":610,"mtime":1606596255683,"results":"24","hashOfConfig":"14"},{"size":512,"mtime":1606733539026,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"i4eqny",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\charactersCard.js",["59","60"],"import { makeStyles } from '@material-ui/core/styles'\r\nimport Popover from '@material-ui/core/Popover'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport React from 'react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))\r\nexport const Card = ({ character }) => {\r\n  \r\n  \r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null)\r\n    }\r\n\r\n    const open = Boolean(anchorEl)\r\n    const id = open ? 'simple-popover' : undefined\r\n  \r\n  return (\r\n    <div className=\"character_container\">\r\n      <p>{character.name}</p>\r\n      <img src={character.image} onClick={handleClick} />\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className=\"Popup_window\">\r\n          <ul style={{listStyleType: 'none'}}>\r\n            <li>№{character.id}</li>\r\n            <li>Gender:  {character.gender}</li>\r\n            <li>Status:  {character.status}</li>\r\n            <li>Species: {character.species}</li>\r\n            <li>Url: {character.url}</li>\r\n            <li>Created: {character.created}</li>\r\n            <li>Location: {character.location.name}</li>\r\n            <li>Origin: {character.origin.name}</li>\r\n           \r\n          </ul>\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  )\r\n\r\n}","D:\\React_projects\\RickAndMortyApp\\r\\src\\App.js",["61"],"import logo from './logo.svg';\nimport './App.scss';\nimport { Characters } from './components/characters/characters';\nimport { Episodes } from './components/episodes/episodes';\nimport { Locations } from './components/locations/locations';\nimport { MyWatchList } from './components/myWatchList/Mylist';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Menu from './components/navigation/Nav';\nimport { Home } from './components/Home/home';\n\n\n\n\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Menu />\n\n        <div className=\"container\">\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route exact path=\"/home\" render={() => <Home />} />\n            <Route exact path=\"/characters\" render={() => <Characters />} />\n            <Route exact path=\"/episodes\" render={() => <Episodes />} />\n            <Route exact path=\"/locations\" render={() => <Locations />} />\n            <Route exact path=\"/myWatchList\" render={() => <MyWatchList />} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App;\n","D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\characters.js",["62","63","64","65"],"import { useEffect, useState } from \"react\"\r\nimport { Card } from \"./charactersCard\"\r\nimport style from './characters.scss'\r\nimport { Pagination } from \"./pagination\"\r\n\r\nexport const Characters = () => {\r\n  \r\nconst [Characters, setCharacters] = useState(null)\r\n  const [filter, setFilter] = useState(null)\r\n// Вот этот блок кода запрашивает фильтрацию по статусу, и кладёт респонс у Characters\r\n  const [alive, setAlive] = useState(null)\r\n  console.log(alive)\r\n const statusFilter = async (status) => {\r\n     let url = `https://rickandmortyapi.com/api/character?status=${status}`\r\n     const result = await fetch(url)\r\n     const response = await result.json()\r\n     console.log(response)\r\n     setCharacters(response.results)\r\n   }\r\n  useEffect(() => {\r\n     console.log('yes ')\r\n   }, [alive])\r\n\r\n  return (\r\n    <>\r\n      <Pagination setCharacters={setCharacters} />\r\n      <button onClick={() => statusFilter('Dead')}>Dead</button>\r\n      <button onClick={() => statusFilter('Alive')}>Alive</button>\r\n      <button onClick={() => statusFilter('Unknown')}>Unknown</button>\r\n      <div className=\"container_list\">\r\n        {Characters &&\r\n          Characters.map((character, index) => (\r\n            <ul>\r\n              <li>\r\n                <Card character={character} />\r\n              </li>\r\n            </ul>\r\n          ))}\r\n        \r\n      </div>\r\n    </>\r\n  )\r\n}","D:\\React_projects\\RickAndMortyApp\\r\\src\\reportWebVitals.js",[],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\popOver.js",[],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\characters\\pagination.js",["66"],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\episodes\\episodes.js",[],["67","68"],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\myWatchList\\Mylist.js",[],["69","70"],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\locations\\locations.js",[],["71","72"],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\navigation\\Nav.js",["73","74","75","76","77"],"import React from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function Menu() {\r\n \r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"nav_container\">\r\n      <AppBar position=\"fixed\" style={{ backgroundColor: 'lightseagreen' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <nav>\r\n              <div className=\"nav\">\r\n                <div activeClassName=\"active\">\r\n                  <NavLink to=\"/characters\">Characters</NavLink>\r\n                </div>\r\n                <div activeClassName=\"active\">\r\n                  <NavLink to=\"/episodes\">Episodes</NavLink>\r\n                </div>\r\n                <div activeClassName=\"active\">\r\n                  <NavLink to=\"/locations\">Locations</NavLink>\r\n                </div>\r\n                <div activeClassName=\"active\">\r\n                  <NavLink to=\"/myWatchList\">MyList</NavLink>\r\n                </div>\r\n                <div>\r\n                  <NavLink to=\"/home\">Home</NavLink>\r\n                  \r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",["78","79"],"D:\\React_projects\\RickAndMortyApp\\r\\src\\components\\Home\\home.js",["80"],"export const Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <img src=\"https://images6.alphacoders.com/876/876893.jpg\" />\r\n      <p>\r\n        Rick and Morty is an American adult animated science fiction sitcom\r\n        created by Justin Roiland and Dan Harmon for Cartoon Network's\r\n        late-night programming block Adult Swim. The series follows the\r\n        misadventures of cynical mad scientist Rick Sanchez and his good-hearted\r\n        but fretful grandson Morty Smith, who split their time between domestic\r\n        life and interdimensional adventures.\r\n      </p>\r\n    </div>\r\n  )\r\n}","D:\\React_projects\\RickAndMortyApp\\r\\src\\index.js",[],{"ruleId":"81","severity":1,"message":"82","line":16,"column":11,"nodeType":"83","messageId":"84","endLine":16,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":33,"column":7,"nodeType":"87","endLine":33,"endColumn":58},{"ruleId":"81","severity":1,"message":"88","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"89","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"81","severity":1,"message":"90","line":9,"column":10,"nodeType":"83","messageId":"84","endLine":9,"endColumn":16},{"ruleId":"81","severity":1,"message":"91","line":9,"column":18,"nodeType":"83","messageId":"84","endLine":9,"endColumn":27},{"ruleId":"81","severity":1,"message":"92","line":11,"column":17,"nodeType":"83","messageId":"84","endLine":11,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":29,"column":10,"nodeType":"95","endLine":29,"endColumn":12,"suggestions":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"99","replacedBy":"104"},{"ruleId":"81","severity":1,"message":"105","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":12},{"ruleId":"81","severity":1,"message":"106","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":20},{"ruleId":"81","severity":1,"message":"107","line":3,"column":22,"nodeType":"83","messageId":"84","endLine":3,"endColumn":30},{"ruleId":"81","severity":1,"message":"108","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"109","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":15},{"ruleId":"97","replacedBy":"110"},{"ruleId":"99","replacedBy":"111"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":7,"nodeType":"87","endLine":4,"endColumn":67},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'style' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'setAlive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacters'. Either include it or remove the dependency array.","ArrayExpression",["112"],"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],["113"],["114"],"'clsx' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'Drawer' is defined but never used.","'Divider' is defined but never used.",["113"],["114"],{"desc":"115","fix":"116"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [fetchCharacters]",{"range":"117","text":"118"},[737,739],"[fetchCharacters]"]